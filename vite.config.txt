import { vitePlugin as remix } from "@remix-run/dev";
import { installGlobals } from "@remix-run/node";
import { defineConfig } from "vite";
import tsconfigPaths from "vite-tsconfig-paths";
import { cjsInterop } from "vite-plugin-cjs-interop";
import path from "path";
import { fileURLToPath } from "url";
import devtoolsJson from 'vite-plugin-devtools-json';

installGlobals();

export default defineConfig({
  plugins: [
    devtoolsJson(),
    remix({
      ignoredRouteFiles: ["**/*.css"],
      future: {
        v3_fetcherPersist: true,
        v3_relativeSplatPath: true,
        v3_lazyRouteDiscovery: true,
        // v3_singleFetch: true,
        v3_throwAbortReason: true,
      },
    }),
    tsconfigPaths(),
    cjsInterop({
      // List of CJS dependencies that require interop
      dependencies: ["react-use", "promise-all-properties"],
    }),
  ],
  server: {
    port: parseInt(process.env.PORT ?? "5137"),
    fs: {
      // Restrict files that could be served by Vite's dev server.  Accessing
      // files outside this directory list that aren't imported from an allowed
      // file will result in a 403.  Both directories and files can be provided.
      // If you're comfortable with Vite's dev server making any file within the
      // project root available, you can remove this option.  See more:
      // https://vitejs.dev/config/server-options.html#server-fs-allow
      allow: [
        "app",
        "node_modules/.pnpm",
        "node_modules/nprogress",
        "node_modules/react-toastify",
        "node_modules/antd-mobile",
        "node_modules/@refinedev"
      ],
    },
  },
  ssr: {
    // similar to serverDependenciesToBundle
    // external: ["promise-all-properties"],
  },
  resolve: {
    alias: {
      "~": path.resolve(__dirname, "./app"),
    },
  },

  build: {
    chunkSizeWarningLimit: 2000, // Adjust the limit as needed (in KiB)
  },
});
